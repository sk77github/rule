运维目标：

多活，HA，即使两个不同的城市地震，水灾，服务仍可用
自动化
智能监控，告警，自动化解决线上问题，不能自动化解决要第一时间定位出线上问题
------------------------------------------------------------------------------------------
运维操作步骤：

1，先列出要操作的所有步骤
2，列出每一步操作可能发生的异常情况，可能影响的相关依赖，可能影响的结果，且对这步操作产生的影响了如指掌并知道涉及的知识点。
3，列出每一步操作的回滚步骤
4，列出评估这个操作成功执行的标准
5，列出整个操作的回滚步骤

----------------------------------------------------------------------------------------
一个架构的可用性标准就是它是否对它的可能故障做了”事前、事中、事后“的相关处理。
“事前”处理，是否有梳理架构中所有的隐患“单点”，尽可能加入HA高可用的保证，在事故前避免其发生。
”事中“处理、如果"单点"不可避免，那么就需要相应的监控盯上，监控必须能够保证第一时间发现“单点”故障并告警。这是事中及时告警。
”事后“处理，监控告警之后，运维必须有一套快速恢复方案，能够尽快恢复服务，这是事后快速恢复。

如果“事前、事中，事后“中任何一个处理标准都无法满足的话，那这个服务其实是不能启用的




如果我们在设计或者开发阶段，欠下更多的债，埋下更多的坑，那么在产品的运行维护阶段，就要加倍偿还这些技术债务。
债总是在那里，只是在哪个阶段还的问题，systems do not run themselves。

自动化的前提是标准化

http://www.jianshu.com/p/9e10b22912a2


-----------------------------------------------------------------------------------------------------------------

SLA:

1) SLA定义：
定义范围，服务目录：
服务支撑度：7X24电话（15分钟以内），5X8 现场（10分钟以内）
提供服务列表如下：
机房级别的热备：
灰度环境监控：慢查询，慢function，错误
上线：
更新：
扩容：
基础平台监控报警：
基础平台可用性：99.9%
业务可用监控：
业务可用报警：
业务服务可用性：
基础组件可用性：99.9%
开发服务支撑：git，dev环境
数据库服务：99.9%
自有云服务：99.9%
私有云服务：99.9%

故障处理服务-->
故障响应时间：
故障恢复时间：
业务问题辅助排查定位：
业务告警服务：

预上线审核服务-->
SQL审核：
HA架构：审核
资源审核：
准入审核：符合上线标准否

其他依赖：
服务关系目录：服务调用关系
高可用网络服务：
自动测试环境：case，性能
自动部署：
自动发现：
应用高可用架构：非高可用，以及不符合上线规范的应用不承诺SLA

风险：
1）解决发布新版本导致问题：没有回滚、回滚指南错误、回滚也无法解决等情况
2）如何快速发现问题：服务目录（没有调用关系）、机器规模大（人工查看）、非过错情况
3）QA配合度，RD配合度、OP的经验
4）快速解决问题：迭代快速，系统变化快，无法依赖流程。
5）确定接管范围：HA，制定《准入规范》，严格走完上线流程，生产环境 → 准生产环境 → beta环境

